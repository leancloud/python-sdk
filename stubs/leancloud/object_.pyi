from typing import Any,Dict,Union


class Object(object):
    def __init__(self, **attrs) -> None: ...

    def extend(cls, name: str) -> Any:...

    def create(cls, class_name: str, **attributes) -> Any:...

#   create_without_data(cls, id_: str) -> object:...
    
    def save_all(cls, objs: List[Object]) -> Any:...

    def destroy_all(cls, objs: List[Object]) -> Any:...

    def get(self, attr: str) -> Any:...

    def relation(self, attr: str) -> Any:...

    def has(self, attr: str) -> bool: ...

    def set(self, key_or_attrs: Union[str,Dict[Any,Any]], value: str=None, unset: bool=False) -> Object:...

    def unset(self, attr: str) -> Object:...

    def increment(self, attr: str, amount: Union[int,float]=1) -> Object:...




